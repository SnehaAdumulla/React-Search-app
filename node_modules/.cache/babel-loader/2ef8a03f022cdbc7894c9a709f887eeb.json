{"ast":null,"code":"var _jsxFileName = \"/Users/sneha/My_React/React-Searchapp/src/components/newsList.js\";\nimport React from 'react';\n\nvar NewsList = function NewsList(props) {\n  //console.log(props)\n  var output = props.newsData.map(function (item) {\n    return React.createElement(\"div\", {\n      key: item.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 7\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8\n      },\n      __self: this\n    }, item.title), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9\n      },\n      __self: this\n    }, item.feed));\n  });\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, output);\n};\n\nexport default NewsList;","map":{"version":3,"sources":["/Users/sneha/My_React/React-Searchapp/src/components/newsList.js"],"names":["React","NewsList","props","output","newsData","map","item","id","title","feed"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAAW;AACxB;AACA,MAAMC,MAAM,GAAGD,KAAK,CAACE,QAAN,CAAeC,GAAf,CAAmB,UAACC,IAAD,EAAQ;AACtC,WACI;AAAK,MAAA,GAAG,EAAEA,IAAI,CAACC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKD,IAAI,CAACE,KAAV,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKF,IAAI,CAACG,IADV,CAFF,CADJ;AAQH,GATc,CAAf;AAWA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKN,MADL,CADJ;AAKH,CAlBD;;AAoBA,eAAeF,QAAf","sourcesContent":["import React from 'react';\n\nconst NewsList = (props) => {\n    //console.log(props)\n    const output = props.newsData.map((item)=>{\n        return(\n            <div key={item.id}>\n              <h2>{item.title}</h2>\n              <div>\n                  {item.feed}\n              </div>\n            </div>\n        )\n    })\n\n    return(\n        <div>\n            {output}\n        </div>\n    )\n}\n\nexport default NewsList;"]},"metadata":{},"sourceType":"module"}